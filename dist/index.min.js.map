{"version":3,"sources":["index.js"],"names":["mysql","require","express","session","path","exphbs","request","config","createConnection","host","response","password","database","connect","err","console","log","port","process","env","PORT","app","use","saveUninitialized","urlencoded","extended","secret","bodyParser","json","set","res","get","req","render","post","username","body","error","results","fields","query","length","loggedin","send","end","username1","password1","concat"],"mappings":"aACA,IAAIA,MAAQC,QAAQ,SADpBC,QAAAD,QAAA,WACID,OAAQC,QAAQ,sBAGhBE,QAAUF,QAAQ,mBAFlBC,WAAUD,QAAQ,eAIlBG,KAAOH,QAAQ,QAHbI,SAASJ,QAAQ,oBAKHA,QAAQ,QAApBK,iBAAAA,QAERL,QAAQ,UAAUM,SAJlB,IAAIH,WAAOH,MAAQO,iBAAnB,CAQIC,KAAU,YAPPC,KAAQ,OASXC,SAAU,mBACVC,SAAU,eAPdX,WAAQY,QAAUN,SAAAA,GAWd,GAAGO,EAAK,MAAMA,EACdC,QAAQC,IAAI,eALZJ,IAAAA,IAAQV,UAJZe,KAAAC,QAAAC,IAAAC,MAAA,IASIL,IAAAA,IAAAA,cAAY,OAWhBM,IAAIC,IAAInB,QAAQ,CANZkB,OAAMnB,SACJe,QAAOC,EAQTK,mBAAmB,KAHvBF,IAAIC,IAAInB,WAAQqB,WAAA,CAAAC,UAAA,KACZC,IAAAA,IAAMC,WADMC,QAGZL,IAAAA,IAAAA,QAAAA,OAAmB,UAHPF,IAAhBC,IAAApB,QAAA,OAAA,WAMAmB,IAAIC,IAAIK,QAAAA,OAAWH,WAAWH,IAA9BQ,IAAA,QAAA,WACAR,IAAIC,IAAIK,cAAA,OAGRN,IAAIC,IAAIpB,GAAAA,SAAAA,EAAO4B,GACXR,EAAIpB,OAAO,UAKfmB,IAAIU,IAAI,QAAI,SAAAC,EAACA,GACTF,EAAIG,OAAO,UAIXH,IAAAA,IAAIG,SAAO,SAAXD,EAAAF,GADJA,EAAAG,OAAA,WAKIH,IAAAA,IAAIG,YAAJ,SAAAD,EAAAF,GADJA,EAAAG,OAAA,cAKCZ,IAFDU,IAAA,aAAA,SAAAC,EAAAF,GAIIC,EAAIE,OAAA,eAEPZ,IAFDU,IAAA,eAAA,SAAAC,EAAAF,GAGIC,EAAIE,OAAA,iBAKRZ,IAAIa,KAAK,QAAS,SAAA5B,EAAAI,GACd,IAAIyB,EAAW7B,EAAQ8B,KAAKD,SACxBxB,EAAWL,EAAQ8B,KAAKzB,SACxBwB,GAAYxB,EAAZwB,WAAYxB,MAAAA,4DAAU,CAAAwB,EAAAxB,GAAA,SAAA0B,EAAAC,EAAAC,GACL,EAANC,EAAMC,QACVH,EAAAnC,QAAoBuC,UAAA,EACXvC,EAAQuC,QAAhBP,SAAAA,EACQhC,EAAQgC,SAAhB,gBAEGzB,EAAAiC,KAAA,uCAENjC,EAAAkC,SAPLlC,EAAAiC,KAAA,yCADJjC,EAWOkC,SAGNvB,IAAAa,KAAA,SAAA,SAAAF,EAAAF,GAjBL,IAAAK,EAAAH,EAAAI,KAAAS,UAmBAlC,EAAmBqB,EAAAI,KAAAU,UACXX,GAAWH,EACXrB,WAAWqB,MAAA,0DAAf,CAAAG,EAAAxB,GAAA,SAAA0B,EAAAC,EAAAC,GAG4B,EAAjBD,EAAQG,QAFRT,EAAIrB,QAAU+B,UAAA,EACVF,EAAXrC,QAAiBgC,SAAAA,EACVG,EAAQG,SAAX,cAEQtC,EAAQgC,KAAAA,uCAFhBL,EAIOc,SAMPd,EAAIa,KAAK,yCAHLC,EAAJA,SAGAd,IAAAA,OAAIa,KAAK,WAAA,OAAA5B,QAAAC,IAAA,qBAAA+B,OAAT9B","file":"index.min.js","sourcesContent":["//including node_module packages in this file\r\nvar mysql = require('mysql');\r\nvar express = require('express');\r\nconst exphbs = require('express-handlebars');\r\nvar session = require('express-session');\r\nvar bodyParser = require('body-parser');\r\nvar path = require('path');\r\nconst  response  = require('express');\r\nconst { request } = require('http');\r\n\r\nrequire('dotenv').config();\r\n\r\n//connecting mysql database\r\nvar connection = mysql.createConnection({\r\n    host    : 'localhost',\r\n    user    : 'root',\r\n    password: \"MohammedAimon@41\",\r\n    database: 'stock_ease'\r\n});\r\n\r\nconnection.connect((err)=>{\r\n    if(err) throw err;\r\n    console.log(\"connected\")\r\n\r\n});\r\n\r\n//initialize express and port\r\nvar app = express();\r\nconst port = process.env.PORT || 5000;\r\n\r\n//setting up ejs\r\napp.set(\"view-engine\",\"ejs\");\r\n//using some of Express packages\r\napp.use(session({\r\n    secret: 'secret',\r\n    resave: true,\r\n    saveUninitialized: true\r\n}));\r\n\r\napp.use(bodyParser.urlencoded({extended : true}));\r\napp.use(bodyParser.json());\r\n\r\napp.use(express.static('views'));\r\napp.use(express.static('styles'));\r\napp.use(express.static('assets'));\r\n\r\napp.set('views', './views')\r\napp.set('view engine', 'ejs')\r\n\r\napp.get('', (req, res)=> {\r\n    res.render('home');\r\n})\r\n\r\napp.get('/home', (req,res)=> {\r\n    res.render('home');\r\n})\r\n\r\napp.get('/login', (req, res)=> {\r\n    res.render('login');\r\n});\r\napp.get('/register', (req, res)=> {\r\n    res.render('register');\r\n});\r\n\r\napp.get('/homeadmin', (req,res)=> {\r\n    res.render('homeadmin');\r\n});\r\napp.get('/homemanager', (req,res)=> {\r\n    res.render('homemanager');\r\n});\r\n\r\n//handling post request\r\napp.post('/auth', function(request, response) {\r\n    var username = request.body.username;\r\n    var password = request.body.password;\r\n    if (username && password) {\r\n        connection.query('select * from manager where username = ? and password = ?', [username, password], function(error, results, fields) {\r\n            if(results.length > 0) {\r\n                request.session.loggedin = true;\r\n                request.session.username = username;\r\n                response.redirect('homemanager');\r\n            } else {\r\n                response.send('Incorrect Username and/or Password!');\r\n            }\r\n            response.end();\r\n        });\r\n    } else {\r\n        response.send('Please enter a Username and Password!');\r\n        response.end();\r\n    }\r\n});\r\napp.post('/auth1', (req,res)=> {\r\n    var username = req.body.username1;\r\n    var password = req.body.password1;\r\n    if(username && password) {\r\n        connection.query('select * from admin where username = ? and password = ?', [username, password], (error, results, fields) =>{\r\n            if(results.length > 0) {\r\n                req.session.loggedin = true;\r\n                req.session.username = username;\r\n                res.redirect('homeadmin');\r\n            } else {\r\n                res.send('Incorrect Username and/or Password!');\r\n            }\r\n            res.end();\r\n        });\r\n    }   else {\r\n            res.send('Please enter a Username and Password!');\r\n            res.end();\r\n    }\r\n});\r\napp.listen(port, ()=> console.log(`Listening on port ${port}`));"]}