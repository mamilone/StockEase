{"version":3,"sources":["index.js"],"names":["mysql","require","express","session","path","exphbs","request","config","createConnection","host","response","password","database","connection","connect","err","log","process","env","PORT","app","set","port","secret","saveUninitialized","resave","bodyParser","urlencoded","extended","json","use","req","res","render","get","post","body","username","length","error","results","fields","loggedin","redirect","send","end","username1","password1","query","listen","console","concat"],"mappings":"aACA,IAAIA,MAAQC,QAAQ,SADpBC,QAAAD,QAAA,WACID,OAAQC,QAAQ,sBAGhBE,QAAUF,QAAQ,mBAFlBC,WAAUD,QAAQ,eAIlBG,KAAOH,QAAQ,QAHbI,SAASJ,QAAQ,oBAKHA,QAAQ,QAApBK,iBAAAA,QAERL,QAAQ,UAAUM,SAJlB,IAAIH,WAAOH,MAAQO,iBAAnB,CAQIC,KAAU,YAPPC,KAAQ,OASXC,SAAU,mBACVC,SAAU,eAKdC,WAAWC,QAAQ,SAACC,GAThBF,GAAAA,EAAAA,MAAab,EACbS,QAAUO,IAAA,eAQdH,IAAAA,IAAUX,UACHa,KAAKE,QAAAC,IAAAC,MAAA,IAUZC,IAAIC,IAAI,cAAc,OAHtBD,IAAME,IAAInB,QAAGc,CAMTM,OAAQ,SAHRF,QAAI,EAKJG,mBAAmB,KADnBC,IAAAA,IAAMC,WAFMC,WAAA,CAAAC,UAAA,KAGZJ,IAAAA,IAAAA,WAAiBK,QAGrBT,IAAIU,IAAIJ,QAAAA,OAAWC,UAAYC,IAAAA,IAAAA,QAAW,OAAA,WAAZR,IAA9BU,IAAA5B,QAAA,OAAA,WAGAkB,IAAIU,IAAI5B,QAAO,WACfkB,IAAIU,IAAI5B,cAAO,OAGfkB,IAAIC,IAAI,GAAA,SAAAU,EAASC,GACbX,EAAIY,OAAA,UAIPb,IAFDc,IAAA,QAAA,SAAAH,EAAAC,GAIIE,EAAID,OAAR,UAIAb,IAAIc,IAAI,SAAU,SAAAH,EAAAC,GACdA,EAAIC,OAAO,WAEfb,IAAIc,IAAI,YAAa,SAAAH,EAAAC,GACjBA,EAAIC,OAAO,cAIXD,IAAAA,IAAIC,aAAO,SAAAF,EAAXC,GADJA,EAAAC,OAAA,eAIID,IAAAA,IAAIC,eAAO,SAAAF,EAAXC,GAGJA,EAAAC,OAAA,iBAGIb,IAAAe,KAAIxB,QAAWL,SAAQ8B,EAAKzB,GAD5B,IAAI0B,EAAW/B,EAAQ8B,KAAKC,SAExBA,EAAY1B,EAAhByB,KAA0BzB,SACtBE,GAAAF,EACIE,WAAWyB,MAAR,4DAAoB,CAAAD,EAAA1B,GAAA,SAAA4B,EAAAC,EAAAC,GACnB,EAAOD,EAAPF,QACQnC,EAAQkC,QAAhBK,UAAA,EACQpC,EAACqC,QAASN,SAAlBA,EACG3B,EAAAiC,SAAA,gBAENjC,EAAAkC,KAAA,uCACDlC,EAAAmC,SAGJnC,EAAAkC,KAAc,yCACdlC,EAAAmC,SAGRzB,IAAIe,KAAK,SAAU,SAAAJ,EAAAC,GACf,IAAIK,EAAWN,EAAIK,KAAKU,UACpBnC,EAAWoB,EAAIK,KAAKW,UACrBV,GAAY1B,EAAZ0B,WAAY1B,MAAAA,0DAAU,CAAA0B,EAAA1B,GAAA,SAAA4B,EAAAC,EAAAC,GACJ,EAANO,EAAMV,QACVE,EAAQF,QAAXI,UAAuB,EACfvC,EAAQuC,QAAZL,SAAAA,EACIlC,EAAQkC,SAAZ,cAEGL,EAAAY,KAAA,uCAENZ,EAAAa,SAPLb,EAAAY,KAAA,yCAUKZ,EAAAa,SAcbzB,IAAI6B,OAAO3B,KAAM,WAAA,OAAK4B,QAAQlC,IAAR,qBAAAmC,OAAiC7B","file":"index.min.js","sourcesContent":["//including node_module packages in this file\r\nvar mysql = require('mysql');\r\nvar express = require('express');\r\nconst exphbs = require('express-handlebars');\r\nvar session = require('express-session');\r\nvar bodyParser = require('body-parser');\r\nvar path = require('path');\r\nconst  response  = require('express');\r\nconst { request } = require('http');\r\n\r\nrequire('dotenv').config();\r\n\r\n//connecting mysql database\r\nvar connection = mysql.createConnection({\r\n    host    : 'localhost',\r\n    user    : 'root',\r\n    password: \"MohammedAimon@41\",\r\n    database: 'stock-ease'\r\n});\r\n\r\n\r\n\r\nconnection.connect((err)=>{\r\n    if(err) throw err;\r\n    console.log(\"connected\")\r\n\r\n});\r\n\r\n//initialize express and port\r\nvar app = express();\r\nconst port = process.env.PORT || 5000;\r\n\r\n//setting up ejs\r\napp.set(\"view-engine\",\"ejs\");\r\n//using some of Express packages\r\napp.use(session({\r\n    secret: 'secret',\r\n    resave: true,\r\n    saveUninitialized: true\r\n}));\r\n\r\napp.use(bodyParser.urlencoded({extended : true}));\r\napp.use(bodyParser.json());\r\n\r\napp.use(express.static('views'));\r\napp.use(express.static('styles'));\r\napp.use(express.static('assets'));\r\n\r\napp.set('views', './views')\r\napp.set('view engine', 'ejs')\r\n\r\napp.get('', (req, res)=> {\r\n    res.render('home');\r\n})\r\n\r\napp.get('/home', (req,res)=> {\r\n    res.render('home');\r\n})\r\n\r\napp.get('/login', (req, res)=> {\r\n    res.render('login');\r\n});\r\napp.get('/register', (req, res)=> {\r\n    res.render('register');\r\n});\r\n\r\napp.get('/homeadmin', (req,res)=> {\r\n    res.render('homeadmin');\r\n});\r\napp.get('/homemanager', (req,res)=> {\r\n    res.render('homemanager');\r\n});\r\n\r\n//handling post request\r\napp.post('/auth', function(request, response) {\r\n    var username = request.body.username;\r\n    var password = request.body.password;\r\n    if (username && password) {\r\n        connection.query('select * from manager where username = ? and password = ?', [username, password], function(error, results, fields) {\r\n            if(results.length > 0) {\r\n                request.session.loggedin = true;\r\n                request.session.username = username;\r\n                response.redirect('homemanager');\r\n            } else {\r\n                response.send('Incorrect Username and/or Password!');\r\n            }\r\n            response.end();\r\n        });\r\n    } else {\r\n        response.send('Please enter a Username and Password!');\r\n        response.end();\r\n    }\r\n});\r\napp.post('/auth1', (req,res)=> {\r\n    var username = req.body.username1;\r\n    var password = req.body.password1;\r\n    if(username && password) {\r\n        connection.query('select * from admin where username = ? and password = ?', [username, password], (error, results, fields) =>{\r\n            if(results.length > 0) {\r\n                req.session.loggedin = true;\r\n                req.session.username = username;\r\n                res.redirect('homeadmin');\r\n            } else {\r\n                res.send('Incorrect Username and/or Password!');\r\n            }\r\n            res.end();\r\n        });\r\n    }   else {\r\n            res.send('Please enter a Username and Password!');\r\n            res.end();\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\napp.listen(port, ()=> console.log(`Listening on port ${port}`));"]}